func main() int32 {
    printf("Début des tests\n-----------\n\n");

    printf("Tests break:\n\n");
    test_break();

    printf("Tests continue:\n\n");
    test_continue();

    mut int32 i := 0;

    while i < 3 as troll {
        i := i + 1;
        continue;
        printf("Protip");
    }

    printf("Tests transtypage");
    test_transtypage();

    return 0;
}

func test_transtypage(){
    mut int32 i := 2;
    mut int32 j := 3;
    mut float32 a := float32(2.0);
    mut float32 b := float32(10.1);

    printf("int + int = ");
    print_number(i+j);
    printf("\n");

    printf("float + float = ");
    print_number(a+b);
    printf("\n");

    printf("i: ");
    print_number(i);
    printf("a: ");
    print_number(a);
    printf("a + i: ");
    print_number(a + i);
    printf("i + a: ");
    print_number(i + a);
    printf("a - i: ");
    print_number(a - i);
    printf("a * i: ");
    print_number(a * i);
    printf("a / i: ");
    print_number(a / i);
    printf("a == i: ");
    printB(a == i);
    printf("a > i: ");
    printB(a > i);
    printf("a < i: ");
    printB(a < i);
    printf("a >= i: ");
    printB(a >= i);
    printf("a <= i: ");
    printB(a <= i);
    printf("a != i: ");
    printB(a != i);

}

func test_continue() {
    mut bool test := true;
    

    printf("\nWhile avec continue\n--------\n");
    mut int32 i := 0;
    while i < 5 {
        i += 1;
        printf("Allo\n");
        continue;
        printf("ads\n");
        test := false;
    }

    printf("\nWhile sans continue\n--------\n");
    i := 0;
    while i < 5 {
        printf("Allo\n");
        printf("ads\n");
        i += 1;
    }

    printf("\nDo avec continue\n--------\n");
    i := 0;
    do {
        i += 1;
        printf("Allo\n");
        continue;
        printf("ads\n");
        test := false;
    }while i < 5;

    printf("\nDo sans continue\n--------\n");
    i := 0;
    do {
        printf("Allo\n");
        printf("ads\n");
        i += 1;
    }while i < 5;

    printf("\nRepeat avec continue\n--------\n");
    repeat uint64(5) {
        printf("Allo\n");
        continue;
        printf("ads\n");
        test := false;
    }

    printf("\nRepeat sans continue\n--------\n");
    repeat uint64(5) {
        printf("Allo\n");
        printf("ads\n");
    }

    printf("\nFor avec continue\n--------\n");
    for mut int32 i:=0; i<3; i+=1 {
		for mut int32 j:=0; j<3; j+=1 {
			printf("i:= %d j:= %d \n", i, j);
            continue;
            test := false;
		}
        printf("Hi");
	}

    printf("\nFor sans continue\n--------\n");
    for mut int32 i:=0; i<3; i+=1 {
		for mut int32 j:=0; j<3; j+=1 {
			printf("i:= %d j:= %d \n", i, j);
		}
	}

    printB(test);
    
}

func test_break() {
    mut bool test := true;
    

    printf("\nWhile avec break\n--------\n");
    mut int32 i := 0;
    while i < 5 {
        printf("Allo\n");
        break;
        printf("ads\n");
        test := false;
        i += 1;
    }

    printf("\nWhile sans break\n--------\n");
    i := 0;
    while i < 5 {
        printf("Allo\n");
        printf("ads\n");
        i += 1;
    }

    printf("\nDo avec break\n--------\n");
    i := 0;
    do {
        printf("Allo\n");
        break;
        printf("ads\n");
        test := false;
        i += 1;
    }while i < 5;

    printf("\nDo sans break\n--------\n");
    i := 0;
    do {
        printf("Allo\n");
        printf("ads\n");
        i += 1;
    }while i < 5;

    printf("\nRepeat avec break\n--------\n");
    repeat uint64(5) {
        printf("Allo\n");
        break;
        printf("ads\n");
        test := false;
    }

    printf("\nRepeat sans break\n--------\n");
    repeat uint64(5) {
        printf("Allo\n");
        printf("ads\n");
    }

    printf("\nFor avec break\n--------\n");
    for mut int32 i:=0; i<3; i+=1 {
		for mut int32 j:=0; j<3; j+=1 {
			printf("i:= %d j:= %d \n", i, j);
            break;
            test := false;
		}
	}

    printf("\nFor sans break\n--------\n");
    for mut int32 i:=0; i<3; i+=1 {
		for mut int32 j:=0; j<3; j+=1 {
			printf("i:= %d j:= %d \n", i, j);
		}
	}

    printB(test);
    
}

func test_repeat() {
    mut int32 test := 0;
    mut uint32 i := uint32(5);

    //repeat i {
    //   printf("5\n");
    //    break;
    //    test+=1;
    //}

    repeat i {
        printf("4\n");
        test+=1;
    }
}


// func errors() uint32 {
//     print_number(true);
//     const int32 a := 5;
//     a := 6;
//     if (3){}
//     b := 123;
//     const int8 a := int8(2);
//     switch a {
//         case b {}
//     }
//     return false;
// }

func mutate_array(mut []int32 array){
    array[0] := 100;
}

func print_number(const float64 f) {
	printf("n := %f\n", f);
}

func print_number(const int32 n) {
    printf("n := %d\n", n);
}

func print_number(const uint32 n) {
    printf("n := %d\n", n);
}

func print_string(const []uint8 s) {
    printf("%s\n", s);
}

func returns_5() int32 {
    return 5;
}

func printB(const bool b){
    if b {
        printf("true\n");
    }
    else {
        printf("false\n");
    }
}
